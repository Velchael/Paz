const registerUser = async (event) => {
  event.preventDefault();
  //console.log('Función registerUser iniciada'); // Agrega un mensaje para verificar si la función se inicia
  registrationMessage.textContent = '';
  registrationMessagedos.textContent = '';
  inputLoginName.value = '';
  inputLoginPassword.value = '';
  inputLogEmail.value = '';
  event.preventDefault();
  // Crear el objeto user con los valores de los inputs
  const user = { 
    username: inputName.value, 
    email: inputEmail.value, 
    password: inputPassword.value
   };
  //console.log('Usuario creado:', user); // Agrega un mensaje para verificar si el objeto de usuario se crea correctamente
  if (await userExists(user.username, user.email, user.password)) {
    //console.log('Usuario ya existe'); // Agrega un mensaje para verificar si se detecta que el usuario ya existe
    registrationMessagedos.textContent = 'Error: El usuario ya ha sido registrado';
    registrationMessagedos.style.color = 'red';
    registrationMessagedos.style.display = 'block';
    inputEmail.value = '';
    inputPassword.value = '';
    setTimeout(function () {
      registrationMessage.textContent = '';
      registrationMessagedos.textContent = '';
      // Aquí colocas el código que se ejecutará después del tiempo especificado
    }, 4000);
    return;
  }
  try {
    const response = await fetch('http://localhost:3307/users', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include', 
      body: JSON.stringify(user)
    });

     // Imprimir el valor de response.ok en la terminal
     console.error('Error al registrar el usuario............', response.status);
     setTimeout(function () {
        window.location.href = "./index.html";
      }, 5000);
    if (response.ok) {
      registrationMessagedos.textContent = 'Um e-mail chegará em sua conta de correio para concluir seu cadastro, confirme...';
      registrationMessagedos.style.color = 'green';
      registrationMessagedos.style.display = 'block';
     // setTimeout(function () {
       // window.location.href = "./index.html";
      //}, 4000);
    } else {
      console.error('Error al registrar el usuario:', response.status); // Agrega un mensaje de error en caso de un problema
      registrationMessagedos.textContent = 'Error: No se pudo registrar';
      registrationMessagedos.style.color = 'red';
      registrationMessagedos.style.display = 'block';
      //setTimeout(function () {
      //  window.location.href = "./index.html";
      //}, 3000);
    }
  } catch (error) {
    console.error('Error de conexión  ojojojojojo:', error); // Agrega un mensaje de error en caso de una excepción
    registrationMessagedos.textContent = 'Error de conexión, inténtalo de nuevo más tarde';
    registrationMessagedos.style.color = 'red';
    registrationMessagedos.style.display = 'block';
   // setTimeout(function () {
    //  window.location.href = "./index.html";
    //}, 3000);
  }
  inputName.value = '';
  inputEmail.value = '';
  inputPassword.value = '';
  inputLoginPassword.value ='';
}
registerForm.addEventListener('submit', registerUser);
/////////////////////
const registerUser = async (event) => {
  registrationMessage.textContent = '';
  registrationMessagedos.textContent = '';
  inputLoginName.value = '';
  inputLoginPassword.value = '';
  inputLogEmail.value = '';
  event.preventDefault();
  const user = { username: inputName.value, email: inputEmail.value, password: inputPassword.value };
  try {
    const response = await fetch('http://127.0.0.1:3307/users', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json',
      //'Origin': 'http://127.0.0.1:5501'
      },
      credentials: 'include', 
      body: JSON.stringify(user)
    });
    if (response.ok) {
      registrationMessagedos.textContent = 'Um e-mail chegará em sua conta de correio para concluir seu cadastro, confirme...';
      registrationMessagedos.style.color = 'green';
      registrationMessagedos.style.display = 'block';
    } else {
      console.error('Error al registrar el usuario:', response.status); // Agrega un mensaje de error en caso de un problema
      setTimeout(function () {
        window.location.href = "./index.html";
      }, 5000);
      registrationMessagedos.textContent = 'Error: No se pudo registrar';
      registrationMessagedos.style.color = 'red';
      registrationMessagedos.style.display = 'block';
    }
  } catch (error) {
    console.error('Error de conexión  ojojojojojo:', error); // Agrega un mensaje de error en caso de una excepción
    registrationMessagedos.textContent = 'Error de conexión, inténtalo de nuevo más tarde';
    registrationMessagedos.style.color = 'red';
    registrationMessagedos.style.display = 'block';
  }
  inputName.value = '';
  inputEmail.value = '';
  inputPassword.value = '';
  inputLoginPassword.value ='';
}
registerForm.addEventListener('submit', registerUser);

////////////////app.js   //////////////
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.options('/users/confirm/:token', (req, res) => {
   //Configura los encabezados CORS adecuados
  res.header('Access-Control-Allow-Methods', 'POST');
  res.header('Access-Control-Allow-Headers', 'Content-Type');
  res.header('Access-Control-Allow-Credentials', 'true');
  // Responde con Ã©xito
  res.status(200).end();
});

// Luego, agrega el manejador de la ruta POST
app.post('/users/confirm/:token', (req, res) => {
  // Tu lÃ³gica de confirmaciÃ³n de correo electrÃ³nico aquÃ­
});
app.use(router);

app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ error: 'Algo deu errado!!!!!!!', details: err.message });
});
/////////////////////ruta de FTP Node rota original para consulta con el servidor nopde
const response = await fetch('https://intelsiteweb.com/appnode/users/login'
/////////////////ruta con localHost vervidor remoto
http://127.0.0.1:3307/users/login

Correo enviado...: 250 2.0.0 Ok: queued as 4TFn7X3l5hzPgkdK
Content-Security-Policy: As configurações da página bloquearam o carregamento de um recurso em https://velchael.github.io/favicon.ico (“img-src”).

///////////////////////// ultima Meta con error
<meta http-equiv="Content-Security-Policy" content="default-src 'self'; img-src 'self' data:;">
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/site.webmanifest">

/////////////////////////////pagina de confirmacion antigua sin css 
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <!-- <meta http-equiv="Content-Security-Policy" content="default-src 'self' http://127.0.0.1; img-src 'self' data:;">-->
    <title>Confirmación de Registro</title>
</head>
<body>
    <h1>Confirmação de e-mail</h1>
    
    <p>Obrigado por se registro. Clique no botão abaixo para confirmar seu e-mail</p>
    <button id="confirmButton">Confirmar e-mail</button>
    <p id="confirmationMessage" style="display: none;"></p>

    <script src="./scripts/confirm.js"></script>
    <script src="./scripts/scripts.js"></script>
</body>

/////////////////////////////yuotube
<li class="list2"><a href="" class="botao botao__primario">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-youtube" width="20" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ff2825" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <rect x="3" y="5" width="18" height="14" rx="4"></rect>
                  <path d="M10 9l5 3l-5 3z"></path>
                </svg>
              </a></li>
///////////////////// navegador con redes
<nav id="menu">
              <h1 class="botonavegador3">7 derramamentos do sangue</h1>
             <ul style="color:#060606">   
              <li class="list"><a href ="#fidelidade"><span class="first-letter">F</span>idelida</a></li>
              <li class="list"><a href ="#redencao"><span class="first-letter">R</span>edenção</a></li>
              <li class="list"><a href ="#conquista"><span class="first-letter">C</span>onquista</a></li>
              <li class="list"><a href ="#identidad"><span class="first-letter">I</span>dentidad</a></li>
              <li class="list"><a href ="#productividad"><span class="first-letter">P</span>rodutivo</a></li>
              <li class="list"><a href ="#proposito"><span class="first-letter">P</span>roposito</a></li>
              <li class="list"><a href ="#consagracao"><span class="first-letter">C</span>onsagração</a></li>
              <li class="list"><a href="#" onclick="goHome(); closeMenu();"><span >&#127968;</span></a></li>
              <li class="list2"><a href="https://www.facebook.com/gleidson.portela.9?mibextid=ZbWKwL" class="botao botao__primario">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-facebook" width="20" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#fd0061" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M7 10v4h3v7h4v-7h3l1 -4h-4v-2a1 1 0 0 1 1 -1h3v-4h-3a5 5 0 0 0 -5 5v2h-3"></path>
                </svg>
              </a></li>
            <li class="list2"><a href="https://www.instagram.com/pibcapelinha?igsh=MTNvaXQ0ZGhyb3l3MA==" class="botao botao__primario">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-instagram" width="20" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#fd0061" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                  <rect x="4" y="4" width="16" height="16" rx="4" />
                  <circle cx="12" cy="12" r="3" />
                  <line x1="16.5" y1="7.5" x2="16.5" y2="7.501" />
                </svg> 
              </a></li>
            <li class="list2"><a href="https://wa.me/5511981868794" class="botao botao__primario">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-whatsapp" width="20" height="18" viewBox="0 0 24 24" stroke-width="1.5" stroke="#fd0061" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9"></path>
                  <path d="M9 10a0.5 .5 0 0 0 1 0v-1a0.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a0.5 .5 0 0 0 0 -1h-1a0.5 .5 0 0 0 0 1"></path>
                </svg>
              </a></li>
             </ul>

            </nav> 